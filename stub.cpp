#include "api_hashes.h"
FARPROC get_api_by_hash(DWORD m,DWORD f){HMODULE h=nullptr;if(m==HASH_KERNEL32_DLL)h=GetModuleHandleA("kernel32.dll");else if(m==HASH_NTDLL_DLL)h=GetModuleHandleA("ntdll.dll");else return nullptr;if(!h)return nullptr;PIMAGE_DOS_HEADER d=(PIMAGE_DOS_HEADER)h;PIMAGE_NT_HEADERS n=(PIMAGE_NT_HEADERS)((BYTE*)h+d->e_lfanew);PIMAGE_EXPORT_DIRECTORY e=(PIMAGE_EXPORT_DIRECTORY)((BYTE*)h+n->OptionalHeader.DataDirectory[IMAGE_DIRECTORY_ENTRY_EXPORT].VirtualAddress);DWORD* names=(DWORD*)((BYTE*)h+e->AddressOfNames);WORD* ord=(WORD*)((BYTE*)h+e->AddressOfNameOrdinals);DWORD* funcs=(DWORD*)((BYTE*)h+e->AddressOfFunctions);for(DWORD i=0;i<e->NumberOfNames;i++){const char* name=(const char*)h+names[i];DWORD ch=const_hash(name);if(ch==f)return(FARPROC)((BYTE*)h+funcs[ord[i]]);}return nullptr;}
#define CALL_API(m,f,r,c,...) (reinterpret_cast<r(c*)(__VA_ARGS__)>(get_api_by_hash(m,f)))
void secret_api_example(){auto pLoadLibraryA=CALL_API(HASH_KERNEL32_DLL,HASH_LOADLIBRARYA,HMODULE,WINAPI,LPCSTR);if(pLoadLibraryA){HMODULE hModule=pLoadLibraryA("user32.dll");}typedef NTSTATUS(NTAPI* PNtQueryInformationProcess)(HANDLE,PROCESSINFOCLASS,PVOID,ULONG,PULONG);auto pNtQueryInformationProcess=CALL_API(HASH_NTDLL_DLL,HASH_NTQUERYINFORMATIONPROCESS,NTSTATUS,NTAPI,HANDLE,PROCESSINFOCLASS,PVOID,ULONG,PULONG);if(pNtQueryInformationProcess){DWORD debugPort=0;pNtQueryInformationProcess(GetCurrentProcess(),(PROCESSINFOCLASS)7,&debugPort,sizeof(debugPort),nullptr);}}
